% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/multi.R
\name{hwefit}
\alias{hwefit}
\title{HWE and random mating estimation and testing for many loci.}
\usage{
hwefit(nmat, type = c("hwe", "rm", "nodr"), overwrite = FALSE, ...)
}
\arguments{
\item{nmat}{A matrix of counts. The rows index the loci and the columns
index the genotypes. So \code{nmat[i, j]} is the number of individuals
that have genotype \code{j-1} at locus \code{i}. The ploidy is
assumed to be \code{ncol(nmat)-1}.}

\item{type}{Should we test for random mating (\code{type = "rm"})
or equilibrium (\code{type = "hwe"}). For tetraploids, both
tests will be run, so this is only applicable for ploidies greater
than 4.}

\item{overwrite}{A logical. The default is to run \code{hwetetra()} if
you have tetraploids, regardless of the selection of \code{type}. Set
this to \code{TRUE} to overwrite this default.}

\item{...}{Any other parameters to send to \code{\link{hwetetra}()},
\code{\link{hwemom}()}, \code{\link{rmlike}()}, or
\code{\link{hwenodr}()}.}
}
\value{
A data frame. The columns of which can are described in
\code{\link{hwetetra}()}, \code{\link{hwemom}()},
\code{\link{rmlike}()}, or \code{\link{hwenodr}()}.
}
\description{
Estimates and tests for either random mating or HWE across many loci
using \code{\link{hwetetra}()}, \code{\link{hwemom}()},
\code{\link{rmlike}()}, or \code{\link{hwenodr}()}.
}
\details{
We provide parallelization support through the \link[future]{future}
package.
}
\examples{
## Generate random data where there is no double reduction at HWE
set.seed(2)
ploidy <- 8
nloc <- 100
size <- 100
r <- runif(nloc)
probmat <- t(sapply(r, dbinom, x = 0:ploidy, size = ploidy))
nmat <- t(apply(X = probmat, MARGIN = 1, FUN = rmultinom, n = 1, size = size))

## Run the analysis in parallel on the local computer with two workers
future::plan(future::multisession, workers = 2)
hout <- hwefit(nmat = nmat)

## Shut down parallel workers
future::plan("sequential")

## Show that test statistic follows theoretical distribution
obs <- sort(hout$chisq_hwe)
plot(x = qchisq(ppoints(n = length(obs)), df = hout$df_hwe[[1]]),
     y = obs,
     xlab = "theoretical",
     ylab = "observed",
     main = "qqplot")
abline(0, 1, col = 2, lty = 2)
mean(hout$chisq_hwe < 0.05, na.rm = TRUE)

}
\author{
David Gerard
}
